{"ast":null,"code":"var _jsxFileName = \"C:\\\\binance-websocket\\\\src\\\\components\\\\CryptoChart.js\";\n/** @format */\n\n// src/components/CryptoChart.js\nimport React from \"react\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, CandleStickController, TimeScale, Tooltip, Title } from \"chart.js\";\nimport { Chart } from \"react-chartjs-2\";\nimport \"chartjs-adapter-date-fns\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, CandleStickController, TimeScale, Tooltip, Title);\nconst CryptoChart = ({\n  chartData\n}) => {\n  const options = {\n    responsive: true,\n    scales: {\n      x: {\n        type: \"time\",\n        time: {\n          unit: \"minute\"\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Chart, {\n      type: \"candlestick\",\n      data: chartData,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_c = CryptoChart;\nexport default CryptoChart;\nvar _c;\n$RefreshReg$(_c, \"CryptoChart\");","map":{"version":3,"names":["React","Chart","ChartJS","CategoryScale","LinearScale","CandleStickController","TimeScale","Tooltip","Title","jsxDEV","_jsxDEV","register","CryptoChart","chartData","options","responsive","scales","x","type","time","unit","children","data","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/binance-websocket/src/components/CryptoChart.js"],"sourcesContent":["/** @format */\r\n\r\n// src/components/CryptoChart.js\r\nimport React from \"react\";\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  CandleStickController,\r\n  TimeScale,\r\n  Tooltip,\r\n  Title,\r\n} from \"chart.js\";\r\nimport { Chart } from \"react-chartjs-2\";\r\nimport \"chartjs-adapter-date-fns\";\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  CandleStickController,\r\n  TimeScale,\r\n  Tooltip,\r\n  Title\r\n);\r\n\r\nconst CryptoChart = ({ chartData }) => {\r\n  const options = {\r\n    responsive: true,\r\n    scales: {\r\n      x: {\r\n        type: \"time\",\r\n        time: {\r\n          unit: \"minute\",\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Chart type=\"candlestick\" data={chartData} options={options} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CryptoChart;\r\n"],"mappings":";AAAA;;AAEA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACEC,KAAK,IAAIC,OAAO,EAChBC,aAAa,EACbC,WAAW,EACXC,qBAAqB,EACrBC,SAAS,EACTC,OAAO,EACPC,KAAK,QACA,UAAU;AACjB,SAASP,KAAK,QAAQ,iBAAiB;AACvC,OAAO,0BAA0B;AAAC,SAAAQ,MAAA,IAAAC,OAAA;AAElCR,OAAO,CAACS,QAAQ,CACdR,aAAa,EACbC,WAAW,EACXC,qBAAqB,EACrBC,SAAS,EACTC,OAAO,EACPC,KACF,CAAC;AAED,MAAMI,WAAW,GAAGA,CAAC;EAAEC;AAAU,CAAC,KAAK;EACrC,MAAMC,OAAO,GAAG;IACdC,UAAU,EAAE,IAAI;IAChBC,MAAM,EAAE;MACNC,CAAC,EAAE;QACDC,IAAI,EAAE,MAAM;QACZC,IAAI,EAAE;UACJC,IAAI,EAAE;QACR;MACF;IACF;EACF,CAAC;EAED,oBACEV,OAAA;IAAAW,QAAA,eACEX,OAAA,CAACT,KAAK;MAACiB,IAAI,EAAC,aAAa;MAACI,IAAI,EAAET,SAAU;MAACC,OAAO,EAAEA;IAAQ;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5D,CAAC;AAEV,CAAC;AAACC,EAAA,GAlBIf,WAAW;AAoBjB,eAAeA,WAAW;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}